{"version":3,"sources":["components/Home.js","components/Navbar.js","services/mail.js","components/Contact.js","components/Projects.js","serviceWorker.js","index.js","Router.js"],"names":["Home","useState","inProp","setInProp","useEffect","CSSTransition","in","timeout","classNames","className","src","alt","to","Navbar","exact","activeClassName","href","target","rel","icon","faGithub","faLinkedin","SERVICE","axios","create","baseURL","MAIL_SERVICE","sendMail","data","post","Contact","email","setEmail","name","setName","message","setMessage","undefined","notification","setNotification","inNotification","setInNotification","onSubmit","e","a","preventDefault","TransitionGroup","htmlFor","type","onChange","value","id","cols","rows","Projects","Boolean","window","location","hostname","match","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0VAMe,SAASA,IAAQ,IAAD,EACDC,oBAAS,GADR,mBACtBC,EADsB,KACdC,EADc,KAO7B,OAJAC,qBAAU,WACRD,GAAU,KACT,IAGD,kBAACE,EAAA,EAAD,CAAeC,GAAIJ,EAAQK,QAAS,IAAKC,WAAW,WAClD,yBAAKC,UAAU,0BACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,UACb,yBAAKC,IAAI,+FAA+FC,IAAI,mBAE9G,yBAAKF,UAAU,QACb,6CACA,wDACA,wSACA,kBAAC,IAAD,CAAMG,GAAG,cAAT,wB,0BCjBG,SAASC,IACtB,OACE,yBAAKJ,UAAU,UACb,4BACE,4BACE,kBAAC,IAAD,CAASK,OAAK,EAACF,GAAG,IAAIG,gBAAgB,UAAtC,SAEF,4BACE,kBAAC,IAAD,CAASH,GAAG,aAAaG,gBAAgB,UAAzC,cAEF,4BACE,kBAAC,IAAD,CAASH,GAAG,WAAWG,gBAAgB,UAAvC,aAGJ,wBAAIN,UAAU,UACZ,4BAAI,uBAAGO,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAMC,QAC5G,4BAAI,uBAAGJ,KAAK,yCAAyCC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAME,U,6CCpBxHC,E,OAAUC,EAAMC,OAAO,CAAEC,QAFyB,6BAUzCC,EANM,CACnBC,SAAU,SAACC,GACT,OAAON,EAAQO,KAAK,OAAQD,K,MCDjB,SAASE,IAAW,IAAD,EACN7B,mBAAS,IADH,mBACzB8B,EADyB,KAClBC,EADkB,OAER/B,mBAAS,IAFD,mBAEzBgC,EAFyB,KAEnBC,EAFmB,OAGDjC,mBAAS,IAHR,mBAGzBkC,EAHyB,KAGhBC,EAHgB,OAIQnC,wBAASoC,GAJjB,mBAIzBC,EAJyB,KAIXC,EAJW,OAKJtC,oBAAS,GALL,mBAKzBC,EALyB,KAKjBC,EALiB,OAMYF,oBAAS,GANrB,mBAMzBuC,EANyB,KAMTC,EANS,KAQhCrC,qBAAU,WACRD,GAAU,KACT,IAEH,IAAMuC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfD,EAAEE,iBADa,kBAGPnB,EAAaC,SAAS,CAAEI,QAAOE,OAAME,YAH9B,OAIbI,EAAgB,yBAChBE,GAAkB,GALL,gDAObF,EAAgB,0DAChBE,GAAkB,GARL,yDAAH,sDAYd,OACE,kBAACK,EAAA,EAAD,KACE,kBAACzC,EAAA,EAAD,CAAeC,GAAIJ,EAAQK,QAAS,IAAKC,WAAW,WAClD,yBAAKC,UAAU,6BACb,6BACE,0CACA,wIAEF,0BAAMiC,SAAUA,GACd,kBAACrC,EAAA,EAAD,CAAeC,GAAIkC,EAAgBjC,QAAS,IAAKC,WAAW,gBAC1D,6BAAM8B,IAER,2BAAOS,QAAQ,QAAf,SACA,6BACE,2BAAOC,KAAK,OAAOf,KAAK,OAAOgB,SAAU,SAACN,GAAQT,EAAQS,EAAE1B,OAAOiC,QAAUA,MAAOjB,KAEtF,2BAAOc,QAAQ,SAAf,UACA,6BAAK,2BAAOC,KAAK,OAAOf,KAAK,QAAQgB,SAAU,SAACN,GAAQX,EAASW,EAAE1B,OAAOiC,QAAUA,MAAOnB,KAC3F,2BAAOgB,QAAQ,WAAf,YACA,8BACEd,KAAK,UACLkB,GAAG,UACHC,KAAK,KACLC,KAAK,KACLJ,SAAU,SAACN,GAAQP,EAAWO,EAAE1B,OAAOiC,QACvCA,MAAOf,IAGT,6BACE,2BAAOa,KAAK,SAASE,MAAM,gB,MCtD1B,SAASI,IAAY,IAAD,EACLrD,oBAAS,GADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAOjC,OAJAC,qBAAU,WACRD,GAAU,KACT,IAGD,kBAACE,EAAA,EAAD,CAAeC,GAAIJ,EAAQK,QAAS,IAAKC,WAAW,WAClD,yBAAKC,UAAU,8BACb,uBAAGA,UAAU,oBAAoBO,KAAK,0CAA0CC,OAAO,SAASC,IAAI,uBAClG,yBAAKT,UAAU,iBACb,yBAAKC,IAAI,0GAA0GC,IAAI,gBAEzH,0CACA,6BACE,+GACA,4BACE,0CACA,oCACA,mCACA,yCAIN,uBAAGF,UAAU,oBAAoBO,KAAK,uCAAuCC,OAAO,SAASC,IAAI,uBAC/F,yBAAKT,UAAU,iBACb,yBAAKC,IAAI,0GAA0GC,IAAI,WAEzH,qCACA,6BACE,oHACA,4BACE,uCACA,uCACA,uCACA,0CACA,wCAIN,uBAAGF,UAAU,oBAAoBO,KAAK,wCAAwCC,OAAO,SAASC,IAAI,uBAChG,yBAAKT,UAAU,iBACb,yBAAKC,IAAI,0GAA0GC,IAAI,aAEzH,uCACA,6BACE,qIACA,4BACE,uCACA,qCACA,uCACA,uCACA,6CC9CM4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCCD,WACb,OACE,kBAAC,IAAD,KACE,yBAAKpD,UAAU,aACb,kBAACI,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACgD,KAAK,IAAIC,UAAW/D,IACjC,kBAAC,IAAD,CAAOc,OAAK,EAACgD,KAAK,WAAWC,UAAWjC,IACxC,kBAAC,IAAD,CAAOhB,OAAK,EAACgD,KAAK,aAAaC,UAAWT,SDTpC,MAAYU,SAASC,eAAe,SD2H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.deeac03f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './home.css'\n\nexport default function Home() {\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    setInProp(true)\n  }, [])\n\n  return (\n    <CSSTransition in={inProp} timeout={250} classNames=\"section\">\n      <div className=\"section-container home\">\n        <div className=\"speach-container\">\n          <div className=\"avatar\">\n            <img src=\"https://res.cloudinary.com/dsira9sgt/image/upload/v1571374617/Daniel%20Garcia/ava_i4outp.jpg\" alt=\"Daniel Garcia\"/>\n          </div>\n          <div className=\"text\">\n            <h1>Daniel Garcia</h1>\n            <h2>Full Stack Web Developer</h2>\n            <p>I am passionate about using technology to improve every aspect of our lifeâ€™s. Continually looking to improve my skills and eager to help other improve theirs. Looking for a company that aims to create innovative and easy to use solutions for everyday problems.</p>\n            <Link to=\"/portfolio\">View my projects</Link>\n          </div>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\n\nimport './navbar.css'\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li>\n          <NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/portfolio\" activeClassName=\"active\">Portfolio</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/contact\" activeClassName=\"active\">Contact</NavLink>\n        </li>\n      </ul>\n      <ul className=\"social\">\n        <li><a href=\"https://github.com/danielgrj\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} /></a></li>\n        <li><a href=\"https://www.linkedin.com/in/danielgrj/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin}/></a></li>\n      </ul>\n    </nav>\n  );\n}\n","import axios from 'axios'\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://danielgarcia.xyz' : 'http://localhost:3000/api/';\n\nconst SERVICE = axios.create({ baseURL });\n\nconst MAIL_SERVICE = {\n  sendMail: (data) => {\n    return SERVICE.post('mail', data);\n  }\n}\n\nexport default MAIL_SERVICE","import React, { useState, useEffect } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport MAIL_SERVICE from './../services/mail'\n\nimport './contact.css'\n\nexport default function Contact() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage ] = useState('');\n  const [notification, setNotification] = useState(undefined)\n  const [inProp, setInProp] = useState(false)\n  const [inNotification, setInNotification] = useState(false);\n\n  useEffect(() => {\n    setInProp(true)\n  }, [])\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await MAIL_SERVICE.sendMail({ email, name, message })\n      setNotification('Your message was sent')\n      setInNotification(true)\n    } catch (e) {\n      setNotification('There was a problem with the server, please try again.')\n      setInNotification(true)\n    }\n  }\n\n  return (\n    <TransitionGroup>\n      <CSSTransition in={inProp} timeout={250} classNames=\"section\">\n        <div className=\"section-container contact\">\n          <div>\n            <h2>Contact me</h2>\n            <p>If you want to get in touch with me, please fill the from below. I will get in contact as soon as I can.</p>\n          </div>\n          <form onSubmit={onSubmit}>\n            <CSSTransition in={inNotification} timeout={200} classNames=\"notification\">\n              <div>{notification}</div>\n            </CSSTransition>\n            <label htmlFor=\"name\">Name:</label>\n            <div>\n              <input type=\"text\" name=\"name\" onChange={(e) => { setName(e.target.value) }} value={name} />\n            </div>\n            <label htmlFor=\"email\">Email:</label>\n            <div><input type=\"text\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} value={email} /></div>\n            <label htmlFor=\"message\">Message:</label>\n            <textarea\n              name=\"message\"\n              id=\"message\"\n              cols=\"30\"\n              rows=\"10\"\n              onChange={(e) => { setMessage(e.target.value) }}\n              value={message}\n            >\n            </textarea>\n            <div>\n              <input type=\"submit\" value=\"Submit\" />\n            </div>\n          </form>\n        </div>   \n      </CSSTransition>\n    </TransitionGroup>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nimport './projects.css'\n\nexport default function Projects() {\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    setInProp(true)\n  }, [])\n\n  return (\n    <CSSTransition in={inProp} timeout={250} classNames=\"section\">\n      <div className=\"section-container projects\">\n        <a className=\"project-container\" href=\"https://danielgrj.github.io/ironEmblem/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <div className=\"project-image\">\n            <img src=\"https://res.cloudinary.com/dsira9sgt/image/upload/v1571347287/Daniel%20Garcia/Screenshot_201_dhjjli.png\" alt=\"Ironemblem\" />\n          </div>\n          <h3>Ironemblem</h3>\n          <div>\n            <p>A tactical multiplayer game, heavily inspired in the classic Fire Emblem games. </p>\n            <ul>\n              <li>Javascript</li>\n              <li>HTML</li>\n              <li>CSS</li>\n              <li>Canvas</li>\n            </ul>\n          </div>\n        </a>\n        <a className=\"project-container\" href=\"https://dan-gis-raudo.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <div className=\"project-image\">\n            <img src=\"https://res.cloudinary.com/dsira9sgt/image/upload/v1571347286/Daniel%20Garcia/Screenshot_202_ohwosc.png\" alt=\"raudo\" />\n          </div>\n          <h3>Raudo</h3>\n          <div>\n            <p>A webapp that lets you connect with the professionals you need in your everyday life.</p>\n            <ul>\n              <li>Node.js</li>\n              <li>Express</li>\n              <li>MongoDB</li>\n              <li>Handlebars</li>\n              <li>Bulma</li>\n            </ul>\n          </div>\n        </a>\n        <a className=\"project-container\" href=\"https://atldan-minerva.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <div className=\"project-image\">\n            <img src=\"https://res.cloudinary.com/dsira9sgt/image/upload/v1571347286/Daniel%20Garcia/Screenshot_203_yggrau.png\" alt=\"minerva\" />\n          </div>\n          <h3>Minerva</h3>\n          <div>\n            <p>Minerva is a quotes and references manager that aims to become a useful tool for humanistic research. </p>\n            <ul>\n              <li>Node.js</li>\n              <li>React</li>\n              <li>MongoDB</li>\n              <li>Express</li>\n              <li>Draft.js</li>\n            </ul>\n          </div>\n        </a>\n      </div>\n    </CSSTransition>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar'\nimport Contact from './components/Contact';\nimport Projects from './components/Projects';\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/portfolio\" component={Projects} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}